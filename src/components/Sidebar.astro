---
import MenuItem from "@components/menu/MenuItem.astro";
import ViewTransitions from "astro/components/ViewTransitions.astro";
import Alertas from "@components/alertas.astro";

// Definir la propiedad tipo
export interface Props {
  tipo: number;
}
const { tipo } = Astro.props;
---

<style>
  /*font awesome icons*/
  /* Posición inicial del círculo */
  .dot {
    transform: translateX(0); /* Posición inicial */
  }

  /* Cuando el checkbox está marcado, el círculo se mueve a la derecha */
  input:checked + .block + .dot {
    transform: translateX(100%); /* Desplazarse a la derecha */
  }

  /* Opcional: ajustar colores al hacer check */
  input:checked + .block {
    background-color: #515253; /* Cambiar el color del switch cuando está activado (modo oscuro o claro) */
  }
</style>
<Alertas />
<aside
  id="sidebar"
  class="w-64 h-screen bg-gray-100 text-black flex flex-col fixed inset-y-0 left-0 transform transition-transform md:translate-x-0 -translate-x-full md:block z-40 dark:bg-gray-800 dark:text-white"
>
  <div class="flex items-center justify-between h-20 border-b border-gray-700">
    <h1 class="text-2xl font-bold ml-4">MIDNIGHT Control</h1>
    <!-- Botón hamburguesa -->
    <button
      id="hamburger"
      class="md:hidden p-2 focus:outline-none"
      onclick="toggleSidebar()"
    >
      <i class="fas fa-bars fa-lg"></i>
    </button>
  </div>
  <nav class="flex-1 mt-10">
    <ul
      class="space-y-6 scrollbar-thin scrollbar-thumb-gray-700 scrollbar-track-gray-100 overflow-x-hidden overflow-y-auto"
    >
      {
        tipo === 1 && (
          <MenuItem
            href="/dashboard"
            iconClass="fa-solid fa-house fa-xl"
            text="Inicio"
            onClick="setActive(this)"
          />
        )
      }
      {
        tipo !== 3 && (
          <MenuItem
            href="/Clientes"
            iconClass="fas fa-users fa-xl"
            text="Clientes"
            onClick="setActive(this)"
          />
        )
      }
      {
        tipo !== 3 && (
          <MenuItem
            href="/ventas"
            iconClass="fas fa-shopping-cart fa-xl"
            text="Ventas"
            onClick="setActive(this)"
          />
        )
      }
      {
        tipo === 1 && (
          <MenuItem
            href="/empleados"
            iconClass="fa-solid fa-address-book fa-xl"
            text="Empleados"
            onClick="setActive(this)"
          />
        )
      }
      {
        tipo === 1 && (
          <MenuItem
            href="/proveedores"
            iconClass="fas fa-truck fa-xl"
            text="Proveedores"
            onClick="setActive(this)"
          />
        )
      }
      {
        tipo === 1 && (
          <MenuItem
            href="#"
            iconClass="fas fa-file-alt fa-xl"
            text="Finanzas"
            onClick="setActive(this)"
          />
        )
      }
      {
        tipo !== 3 && (
          <MenuItem
            href="#"
            iconClass="fas fa-bag-shopping fa-xl"
            text="Compras"
            onClick="setActive(this)"
          />
        )
      }
      {
        tipo !== 3 && (
          <MenuItem
            href="#"
            iconClass="fa-solid fa-box fa-xl"
            text="Inventario"
            onClick="setActive(this)"
          />
        )
      }
      <MenuItem
        id="logout"
        iconClass="fas fa-sign-out-alt fa-xl"
        text="Cerrar Sesion"
        onClick="setActive(this)"
      />
      <li
        class="group relative px-4 py-2 flex items-center space-x-4 cursor-pointer"
        transition:persist
      >
        <!-- Switch de cambio de tema -->
        <label class="flex items-center cursor-pointer">
          <div class="relative">
            <input id="theme-toggle" type="checkbox" class="sr-only" />
            <div
              class="block bg-yellow-500 dark:bg-gray-300 w-14 h-8 rounded-full"
            >
            </div>
            <div
              class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"
            >
            </div>
          </div>
          <div class="ml-3 text-gray-700 dark:text-gray-300 flex items-center">
            <!-- Iconos de sol y luna con Font Awesome -->
            <i id="sun-icon" class="fas fa-sun text-yellow-500 hidden"></i>
            <!-- Icono del sol (modo claro) -->
            <i id="moon-icon" class="fas fa-moon text-gray-300 hidden"></i>
            <!-- Icono de la luna (modo oscuro) -->
          </div>
        </label>
      </li>
    </ul>
  </nav>
</aside>

<!-- Encabezado en pantallas pequeñas -->
<div
  id="header"
  class="md:hidden sm:hidden lg:hidden xl:hidden bg-gray-800 text-white flex items-center justify-between p-4 fixed top-0 left-0 right-0 z-50"
>
  <h1 class="text-2xl font-bold">MIDNIGHT</h1>
  <button
    id="hamburger-header"
    class="p-2 focus:outline-none"
    onclick="toggleSidebar()"
  >
    <i class="fas fa-bars fa-lg"></i>
  </button>
</div>

<!-- Main Content width 90% -->
<div id="main-content" class="md:ml-64 p-2 w-screen h-screen overflow-y-auto">
  <slot />

  <!-- Scripts -->
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const menuItems = document.querySelectorAll("nav ul li a");
      const sidebar = document.getElementById("sidebar");
      const hamburger = document.getElementById("hamburger");
      const hamburgerHeader = document.getElementById("hamburger-header");
      const themeToggle = document.getElementById("theme-toggle");
      const sunIcon = document.getElementById("sun-icon");
      const moonIcon = document.getElementById("moon-icon");
      const logout = document.getElementById("logout");
      const prefersDarkScheme = window.matchMedia(
        "(prefers-color-scheme: dark)"
      );
      const currentTheme = localStorage.getItem("theme");

      function toggleSidebar() {
        sidebar.classList.toggle("-translate-x-full");
      }

      function setActive(selectedItem) {
        document.querySelectorAll("li").forEach((item) => {
          item.classList.remove(
            "bg-white",
            "text-gray-900",
            "border-l-2",
            "border-gray-500",
            "p-2",
            "rounded-md"
          );
        });
        selectedItem.classList.add(
          "bg-white",
          "text-gray-900",
          "border-l-2",
          "border-gray-500",
          "p-2",
          "rounded-md"
        );
      }

      function applyTheme(theme) {
        document.documentElement.classList.toggle("dark", theme === "dark");
        themeToggle.checked = theme === "dark";
        sunIcon.classList.toggle("hidden", theme === "dark");
        moonIcon.classList.toggle("hidden", theme !== "dark");
      }

      if (currentTheme) {
        applyTheme(currentTheme);
      } else {
        applyTheme(prefersDarkScheme.matches ? "dark" : "light");
      }

      themeToggle?.addEventListener("change", function () {
        const theme = themeToggle.checked ? "dark" : "light";
        applyTheme(theme);
        localStorage.setItem("theme", theme);
      });

      prefersDarkScheme.addEventListener("change", (e) => {
        if (!localStorage.getItem("theme")) {
          applyTheme(e.matches ? "dark" : "light");
        }
      });
      document.addEventListener("astro:page-load", () => {
        setActive(document.querySelector(`a[href="${location.pathname}"]`));
        applyTheme(localStorage.getItem("theme"));
      });

      hamburger?.addEventListener("click", toggleSidebar);
      hamburgerHeader?.addEventListener("click", toggleSidebar);

      logout.addEventListener("click", () => {
        //remove the cookie "token"
        const token = document.cookie
          .split("; ")
          .find((row) => row.startsWith("token"))
          .split("=")[1];
        //rem
        document.cookie = `token=${token}; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;

        window.location.href = "/";
      });
    });
  </script>
</div>

<ViewTransitions />
