---
export const prerender = false;
const data = Astro.locals;
import { verify, userinfo } from "@Lib/auth";
import { Fetcher } from "@Lib/fetcher";

if ((await verify(data.token?.value)) == false) {
  return new Response(null, {
    status: 302,
    headers: {
      Location: "/login",
    },
  });
}

const token = data.token?.value;

let res;
try {
  res = await userinfo(token);
} catch (error) {
  console.error("Error al obtener la informaci√≥n del usuario:", error);
  return new Response(null, {
    status: 500,
    statusText: "Internal Server Error",
  });
}

const user = res;

let productos = [];
try {
  const res = await Fetcher("productos", "listar", token);
  if (res.status !== 200) {
    throw new Error("Error al obtener los productos");
  }
  productos = await res.data;
} catch (error) {
  console.error("Error al obtener los productos", error);
}
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/all.css"
    />
    <title>Carrito de Compras</title>
  </head>
  <body class="bg-gray-100 text-gray-800">
    <header class="bg-white shadow-md py-4">
      <div class="container mx-auto px-6 flex justify-between items-center">
        <a href="/" class="text-indigo-600 font-bold text-lg hover:underline">
          &larr; Volver a la tienda
        </a>
        <h1 class="text-2xl font-bold text-indigo-600">Tu Carrito</h1>
      </div>
    </header>
    <!--Hola juan -->
    <section class="container mx-auto px-6 py-8 flex">
      <div class="w-full lg:w-2/3">
        <div id="cart-items" class="grid grid-cols-1 gap-6"></div>
      </div>

      <aside class="w-full lg:w-1/3 p-6 bg-white shadow-md rounded-lg lg:ml-8">
        <h2 class="text-xl font-bold mb-4">Resumen de Compra</h2>
        <p class="text-gray-700">
          Cantidad de Productos: <span id="product-count">0</span>
        </p>
        <p class="text-gray-700 mt-2">
          Subtotal: <span id="subtotal">$0.00</span>
        </p>
        <p class="text-gray-700 mt-2 font-semibold">
          Total: <span id="total">$0.00</span>
        </p>
        <button
          class="bg-red-600 text-white mt-6 w-full py-2 rounded-lg hover:bg-red-700 flex items-center justify-center"
          onclick="emptyCart()"
        >
          <i class="fas fa-trash-alt mr-2"></i> Vaciar Carrito
        </button>
        <a href="/pago">
          <button
            class="bg-indigo-600 text-white mt-4 w-full py-2 rounded-lg hover:bg-indigo-700"
          >
            <i class="fa-solid fa-credit-card"></i> Proceder al Pago</button
          >
        </a>
      </aside>
    </section>

    <script type="module" data-astro-rerun>
      function loadCart() {
        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        let cartItemsContainer = document.getElementById("cart-items");
        let productCount = document.getElementById("product-count");
        let subtotal = document.getElementById("subtotal");
        let total = document.getElementById("total");
        cartItemsContainer.innerHTML = "";

        cart.forEach((item, index) => {
          item.quantity = item.quantity || 1;
          let productCard = document.createElement("div");
          productCard.className =
            "bg-white p-6 rounded-lg shadow-lg flex items-center justify-between";
          productCard.innerHTML = `
            <div class="flex items-center">
              <img src="${item.img}" alt="${item.name}" class="w-16 h-16 object-cover rounded mr-4">
              <div>
                <h3 class="text-lg font-semibold">${item.name}</h3>
                <p class="text-gray-700">$${item.price.toFixed(2)}</p>
                <div class="flex items-center mt-4">
                  <button class="px-4 py-1 bg-gray-200 rounded-l" onclick="decreaseQuantity(${index})">-</button>
                  <span class="px-4 py-1">${item.quantity}</span>
                  <button class="px-4 py-1 bg-gray-200 rounded-r" onclick="increaseQuantity(${index})">+</button>
                </div>
              </div>
            </div>
            <button class="text-red-600 hover:text-red-800" onclick="removeItem(${index})"><i class="fa-solid fa-trash-can-xmark"></i> Eliminar</button>
          `;
          cartItemsContainer.appendChild(productCard);
        });

        productCount.textContent = cart.reduce(
          (acc, item) => acc + item.quantity,
          0,
        );
        let subtotalAmount = cart.reduce(
          (acc, item) => acc + item.price * item.quantity,
          0,
        );
        subtotal.textContent = "$" + subtotalAmount.toFixed(2);
        total.textContent = "$" + subtotalAmount.toFixed(2);
      }

      window.increaseQuantity = function (index) {
        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        cart[index].quantity++;
        localStorage.setItem("cart", JSON.stringify(cart));
        loadCart();
      };
      window.decreaseQuantity = function (index) {
        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        if (cart[index].quantity > 1) {
          cart[index].quantity--;
        } else {
          cart.splice(index, 1); // Eliminar directamente el producto si la cantidad es 1
        }
        localStorage.setItem("cart", JSON.stringify(cart));
        loadCart();
      };

      window.removeItem = function (index) {
        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        cart.splice(index, 1);
        localStorage.setItem("cart", JSON.stringify(cart));
        loadCart();
      };

      window.emptyCart = function () {
        localStorage.removeItem("cart");
        loadCart();
      };

      loadCart();
    </script>
  </body>
</html>
